# # Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# # Пользователь вводит 2 числа. n — кол-во элементов первого множества. 
# # m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.



# def union_two(counta,countb):
#     a = {int(input('Введите число множества a: ')) for x in range(counta)}
#     b = {int(input('Введите число множества b: ')) for y in range(countb)}
#     return sorted(a.union(b), reverse=False)

# counta = int(input("Введите колчество элементов в множестве a:"))
# countb = int(input("Введите колчество элементов в множестве b:"))
# print(union_two(counta,countb))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. 
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на 
# них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, 
# которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном списке урожайности грядки.

import random

def maximum_berries(n, bush_number):
    berries = [random.randint(100,1000) for i in range(n)]
    print(berries)
    max_berries = 0
    if bush_number == 1:
        max_berries = berries[0]+berries[1]+berries[-1]
    if bush_number == len(berries):
        max_berries = berries[-1] + berries[-2] + berries[0]
    else:
        max_berries = berries[bush_number - 1]+ berries[bush_number - 2] + berries[bush_number]
    return max_berries



n = int(input('Введите количество кустов: '))
bush_number = int(input('Введите номер куста: '))
print(f" С куста {bush_number} и двух соседних можно собрать {maximum_berries(n,bush_number)} ягод")





